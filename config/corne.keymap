/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    combos {
        compatible = "zmk,combos";

        vol_up {
            bindings = <&kp C_VOLUME_UP>;
            key-positions = <30 18>;
        };

        vol_down {
            bindings = <&kp C_VOL_DN>;
            key-positions = <29 17>;
        };

        br_up {
            bindings = <&kp C_BRIGHTNESS_INC>;
            key-positions = <31 19>;
        };

        br_down {
            bindings = <&kp C_BRIGHTNESS_DEC>;
            key-positions = <28 16>;
        };
    };

    behaviors {
        lalt_to_shift: lalt_to_shift {
            compatible = "zmk,behavior-tap-dance";
            label = "LALT_TO_SHIFT";
            #binding-cells = <0>;
            bindings = <&kp LALT>, <&kt LSHIFT>;
        };

        enter_on_double_space: enter_on_double_space {
            compatible = "zmk,behavior-tap-dance";
            label = "ENTER_ON_DOUBLE_SPACE";
            #binding-cells = <0>;
            bindings = <&kp SPACE>, <&kp ENTER>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BSPC |
            // | SHFT |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | CTRL |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | ALT | LWR | SPC |   | ENT | RSE  | GUI |

            bindings = <
&kp ESC    &kp Q  &kp W  &kp E           &kp R  &kp T                     &kp Y                   &kp U  &kp I       &kp O    &kp P     &kp BACKSPACE
&kp TAB    &kp A  &kp S  &kp D           &kp F  &kp G                     &kp H                   &kp J  &kp K       &kp L    &kp SEMI  &kp SQT
&kp LCTRL  &kp Z  &kp X  &kp C           &kp V  &kp B                     &kp N                   &kp M  &kp COMMA   &kp DOT  &kp FSLH  &kp DEL
                         &lalt_to_shift  &mo 1  &enter_on_double_space    &enter_on_double_space  &mo 2  &kp RSHIFT
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB | BT1 | BT4 |  1  |  2  |  3  |   |     |  UP |     |     |     | BSPC |
            // | BTCLR| BT2 | BT5 |  4  |  5  |  6  |   | LFT | DWN | RGT |     |     |      |
            // | SHFT | BT3 |  0  |  7  |  8  |  9  |   |     |     |     |     |     |      |
            //                    | ALT |     | SPC |   | ENT |     | GUI |

            bindings = <
&trans  &none  &none           &kp UP_ARROW    &none      &none     &none   &kp N7  &kp N8  &kp N9  &trans  &trans
&trans  &none  &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT  &none     &none   &kp N4  &kp N5  &kp N6  &trans  &trans
&trans  &none  &none           &none           &none      &none     &kp N0  &kp N1  &kp N2  &kp N3  &trans  &trans
                               &trans          &trans     &trans    &trans  &trans  &trans
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BSPC |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | ALT |     | SPC |   | ENT |     | GUI |

            bindings = <
&kp ESC  &kp EXCL      &kp QUESTION    &kp UP_ARROW          &kp DLLR               &kp PRCNT      &kp AMPERSAND  &kp CARET  &kp ASTRK             &kp LEFT_BRACKET       &kp RIGHT_BRACKET  &kp BSPC
&kp TAB  &bt BT_CLR    &kp LEFT_ARROW  &kp DOWN_ARROW        &kp RIGHT_ARROW        &kp AT_SIGN    &kp UNDER      &kp EQUAL  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp BSLH           &kp GRAVE
&trans   &bt BT_SEL 0  &bt BT_SEL 1    &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp HASH       &kp MINUS      &kp PLUS   &kp LBRC              &kp RBRC               &kp PIPE           &kp TILDE
                                       &trans                &trans                 &kp SPACE      &kp RET        &trans     &kp RGUI
            >;
        };
    };
};
